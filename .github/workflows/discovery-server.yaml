name: Build and Deploy Discovery Server
on:
  push:
    paths:
      - 'discovery-server/**' # Trigger on changes in the feature branch for discovery-server
    branches:
      - main

  pull_request:
    paths:
      - 'discovery-server/**' # Trigger on pull requests to the main branch for discovery-server
    branches:
      - main

jobs:
  build:
    name: Build Discovery Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: maven # Cache Maven dependencies

      - name: Build with Maven
        run: mvn -B package --file discovery-server/pom.xml

      - name: Run tests
        run: mvn -B test --file discovery-server/pom.xml

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: discovery-server
          file: ./discovery-server/Dockerfile
          platforms:
            - linux/amd64
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-server:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: discovery-server
          file: ./discovery-server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-server:latest

  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: discovery-server/ecs-task-definition.json
          service: discovery-server-service
          cluster: discovery-server-cluster
          wait-for-service-stability: true